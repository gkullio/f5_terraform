#!/bin/bash

# NOTE: Startup Script is run once / initialization only (Cloud-Init behavior vs. typical re-entrant for Azure Custom Script Extension )
# For 15.1+ and above, Cloud-Init will run the script directly and can remove Azure Custom Script Extension


mkdir -p  /var/log/cloud /config/cloud /var/config/rest/downloads
LOG_FILE=/var/log/cloud/startup-script.log
[[ ! -f $LOG_FILE ]] && touch $LOG_FILE || { echo "Run Only Once. Exiting"; exit; }
npipe=/tmp/$$.tmp
trap "rm -f $npipe" EXIT
mknod $npipe p
tee <$npipe -a $LOG_FILE /dev/ttyS0 &
exec 1>&-
exec 1>$npipe
exec 2>&1


### write_files:
# Download or Render BIG-IP Runtime Init Config

cat << 'EOF' > /config/cloud/runtime-init-conf.yaml
---
runtime_parameters:
  - name: USER_NAME
    type: static
    value: ${bigip_username}
  - name: USER_NAME_2
    type: static
    value: ${bigip_username_2}    
  - name: SSH_KEYS
    type: static
    value: ${ssh_keypair}
  - name: ADMIN_PASS
    type: static
    value: ${bigip_password} 
  - name: GATEWAY_EXTERNAL
    type: metadata
    metadataProvider:
      environment: azure
      type: network
      field: ipv4
      index: 1
      ipcalc: first
  - name: GATEWAY_INTERNAL
    type: metadata
    metadataProvider:
      environment: azure
      type: network
      field: ipv4
      index: 2
      ipcalc: first
  - name: SELF_IP_EXTERNAL
    type: metadata
    metadataProvider:
      environment: azure
      type: network
      field: ipv4
      index: 1
      ipcalc: address
  - name: SELF_IP_INTERNAL
    type: metadata
    metadataProvider:
      environment: azure
      type: network
      field: ipv4
      index: 2
      ipcalc: address
  - name: DNS_SERVER
    type: static
    value: ${dns_server}
  - name: DNS_SUFFIX
    type: static
    value: ${dns_suffix}
  - name: NTP_SERVER
    type: static
    value: ${ntp_server}
  - name: TIMEZONE
    type: static
    value: ${timezone}
  - name: HOST_NAME
    type: metadata
    metadataProvider:
      environment: azure
      type: compute
      field: name
  - name: REGION
    type: url
    value: http://169.254.169.254/metadata/instance/compute/location?api-version=2021-05-01&format=text
    headers:
      - name: Metadata
        value: true
pre_onboard_enabled:
  - name: provision_rest
    type: inline
    commands:
      - /usr/bin/setdb provision.extramb 1024
      - /usr/bin/setdb setup.run false
extension_packages:
  install_operations:
    - extensionType: do
      extensionVersion: ${DO_VER}
      extensionUrl: ${DO_URL}
    - extensionType: as3
      extensionVersion: ${AS3_VER}
      extensionUrl: ${AS3_URL}
    - extensionType: ts
      extensionVersion: ${TS_VER}
      extensionUrl: ${TS_URL}
    - extensionType: fast
      extensionVersion: ${FAST_VER}
      extensionUrl: ${FAST_URL}
    - extensionType: cf
      extensionVersion: ${CFE_VER}
      extensionUrl: ${CFE_URL}
extension_services:
  service_operations:
    - extensionType: do
      type: inline
      value:
        schemaVersion: 1.0.0
        class: Device
        async: true
        label: Onboard BIG-IP
        Common:
          class: Tenant
          dbVars:
            class: DbVariables
            provision.extramb: 1024
            config.allow.rfc3927: enable
            ui.advisory.enabled: true
            ui.advisory.color: green
            ui.advisory.text: 'This Banner can be Customized to your liking'
          mySystem:
            autoPhonehome: true
            class: System
            hostname: '{{{ HOST_NAME }}}.${dns_suffix}'
          '{{{ USER_NAME }}}':
            class: User
            partitionAccess:
              all-partitions:
                role: admin
            password: '{{{ ADMIN_PASS }}}'
            shell: bash
            userType: regular
            keys:
              - '{{{ SSH_KEYS }}}'
            forceInitialPasswordChange: false
          '{{{ USER_NAME_2 }}}':
            class: User
            partitionAccess:
              all-partitions:
                role: admin
            password: '{{{ ADMIN_PASS }}}'
            shell: bash
            userType: regular
            keys:
              - '{{{ SSH_KEYS }}}'
            forceInitialPasswordChange: false
          httpd:
            class: HTTPD
            maxClients: 10
            authPamIdleTimeout: 900
            sslCiphersuite:
            - ECDHE-ECDSA-AES256-GCM-SHA384
            - ECDHE-ECDSA-AES256-SHA384
            - ECDHE-ECDSA-AES256-SHA
            - ECDH-ECDSA-AES256-GCM-SHA384
            - ECDH-ECDSA-AES256-SHA384
            - ECDH-ECDSA-AES256-SHA
            - AES256-GCM-SHA384
            - AES256-SHA256
            - AES256-SHA
            - CAMELLIA256-SHA
            - ECDHE-RSA-AES128-GCM-SHA256
            - ECDHE-ECDSA-AES128-GCM-SHA256
            - ECDHE-ECDSA-AES128-SHA256
            - ECDHE-RSA-AES128-SHA
            - ECDHE-ECDSA-AES128-SHA
            - ECDH-ECDSA-AES128-GCM-SHA256
            - ECDH-ECDSA-AES128-SHA256
            - ECDH-ECDSA-AES128-SHA
            - AES128-GCM-SHA256
            - AES128-SHA256
            - AES128-SHA
            - SEED-SHA
            - CAMELLIA128-SHA
            sslProtocol: all -SSLv2 -SSLv3 -TLSv1
          sshd:
            class: SSHD
            banner: 'Welcome to the thunderdome.  Also this is a demo for the Azure deployment of F5 BIG-IP.'
            inactivityTimeout: 900
            ciphers:
            - aes128-ctr
            - aes192-ctr
            - aes256-ctr
            loginGraceTime: 60
            MACS:
            - hmac-sha1
            - hmac-ripemd160
            maxAuthTries: 3
            maxStartups: '5'
            protocol: 2         
          myDns:
            class: DNS
            nameServers:
              - '{{{ DNS_SERVER }}}'
              - 2001:4860:4860::8844
            search:
              - f5.com
          myNtp:
            class: NTP
            servers:
              - '{{{ NTP_SERVER }}}'
              - 1.pool.ntp.org
              - 2.pool.ntp.org
            timezone: '{{{ TIMEZONE }}}'
          myProvisioning:
            class: Provision
            ltm: nominal
            asm: nominal
            avr: nominal
            apm: nominal
            gtm: nominal
          external:
            class: VLAN
            tag: 4094
            mtu: 1500
            interfaces:
              - name: 1.1
                tagged: false
          external-localself:
            class: SelfIp
            address: '{{{ SELF_IP_EXTERNAL }}}/24'
            vlan: external
            allowService: default
            trafficGroup: traffic-group-local-only
          internal:
            class: VLAN
            tag: 4093
            mtu: 1500
            interfaces:
              - name: 1.2
                tagged: false
          internal-localself:
            class: SelfIp
            address: '{{{ SELF_IP_INTERNAL }}}/24'
            vlan: internal
            allowService: default
            trafficGroup: traffic-group-local-only
          default:
            class: Route
            gw: '{{{ GATEWAY_EXTERNAL }}}'
            network: default
            mtu: 1500
    - extensionType: as3
      type: inline
      value:
        class: AS3
        action: deploy
        persist: true
        declaration:
          class: ADC
          schemaVersion: 3.0.0
          label: Sample 1
          remark: A HTTP sample application
          Applications:
            class: Tenant
            https_app:
              class: Application
              https_app_vs:
                class: Service_HTTPS
                virtualAddresses:
                  - '${app1_ip}'
                virtualPort: 443
                redirect80: false
                iRules:
                  - rule_client_xff
                profileHTTP: 
                  use: http_xff
                serverTLS:
                  bigip: /Common/clientssl
                clientTLS:
                  bigip: /Common/serverssl
                pool: https_pool
              rule_client_xff:
                class: iRule
                iRule: "when HTTP_REQUEST { HTTP::header insert X-Forwarded-For [IP::remote_addr] }"
              http_xff:
                class: HTTP_Profile
                xForwardedFor: true
              https_pool:
                class: Pool
                monitors:
                  - https
                members:
                  - servicePort: 443
                    serverAddresses:
                      - 10.245.3.100
                      - 10.245.3.101
                      - 10.245.3.102
            http_app:
              class: Application
              http_app_vs:
                class: Service_HTTP
                virtualAddresses:
                  - '${app1_ip}'
                virtualPort: 80
                iRules:
                  - rule_client_xff
                profileHTTP: 
                  use: http_xff
                pool: http_pool
              rule_client_xff:
                class: iRule
                iRule: "when HTTP_REQUEST { HTTP::header insert X-Forwarded-For [IP::remote_addr] }"
              http_xff:
                class: HTTP_Profile
                xForwardedFor: true
              http_pool:
                class: Pool
                monitors:
                  - http
                members:
                  - servicePort: 80
                    serverAddresses:
                      - 10.245.3.100
                      - 10.245.3.101
                      - 10.245.3.102
post_onboard_enabled:
  - name: misc
    type: inline
    commands:
    - tmsh save sys config
EOF

# Download BIG-IP Runtime Init
for i in {1..30}; do
    curl -fv --retry 1 --connect-timeout 5 -L ${INIT_URL} -o "/var/config/rest/downloads/f5-bigip-runtime.gz.run" && break || sleep 10
done

# Remove comment to do silly debugging on BIG-IP Runtime init
# export F5_BIGIP_RUNTIME_INIT_LOG_LEVEL=silly
# export F5_BIGIP_RUNTIME_EXTENSION_INSTALL_DELAY_IN_MS=60000

# Install BIG-IP Runtime Init
bash /var/config/rest/downloads/f5-bigip-runtime.gz.run -- '--cloud azure'

# Run BIG-IP Runtime Init and Process YAML
f5-bigip-runtime-init --config-file /config/cloud/runtime-init-conf.yaml
